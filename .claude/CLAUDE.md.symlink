# Memory

## Contributing
When contributing code:

1. Try keeping things as simple as possible, but no simpler.
2. Favor functions over classes.
3. Follow established codebase patterns.
4. After having modified/added a function, and before modyfing/adding the next
   one, commit using the instructions found below.

### Coding standards
Most projects, unless otherwise stated, should:

1. If is a Python project, use [Ruff](https://docs.astral.sh/ruff/) to lint and format: `ruff check` and `ruff format`.
3. Use [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/) to write commit messages.
4. Limit the title of commit messages to 50 characters and the body to 79.
5. Use [semantic versioning](https://semver.org/).
6. Use [conventional comments](https://conventionalcomments.org) when reviewing PRs.
7. Use the PR template if one exists.
8. When writing commit messages and PR descriptions, avoid superlatives like
   comprehensive, major, etc.

#### Reference commands for Jujutsu:

- `jj log -r master..@ --template description`: to get the commit messages
  between master and @.
- `jj diff --git -r master..@`: to get the diff of all commits between master
  and @.
- `jj log -r @ -T "self.bookmarks()" --no-graph`: to determine the current
  bookmark (aka branch in git), remove the * at the end, if any.

<!-- vim: set filetype=markdown: -->
