# vim: filetype=zsh
# zmodload zsh/zprof

# History settings
# From https://martinheinz.dev/blog/110
HISTFILE=~/.zsh_histfile
HISTSIZE=10000000
SAVEHIST=10000000
HISTORY_IGNORE="(ls|cd|pwd|exit|cd)*"
HISTDUP=erase
setopt extended_history      # Write the history file in the ':start:elapsed;command' format.
setopt inc_append_history    # Write to the history file immediately, not when the shell exits.
setopt share_history         # Share history between all sessions.
setopt hist_ignore_dups      # Do not record an event that was just recorded again.
setopt hist_ignore_all_dups  # Delete an old recorded event if a new event is a duplicate.
setopt hist_ignore_space     # Do not record an event starting with a space.
setopt hist_save_no_dups     # Do not write a duplicate event to the history file.
setopt hist_verify           # Do not execute immediately upon history expansion.
setopt append_history        # append to history file (Default)
setopt hist_no_store         # Don't store history commands
setopt hist_reduce_blanks    # Remove superfluous blanks from each command line being added to the history.

setopt autocd extendedglob nomatch notify
bindkey -v
export KEYTIMEOUT=1
# End of lines configured by zsh-newuser-install

# Autocompletion using arrow keys (based on history)
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

bindkey "^[OA" up-line-or-beginning-search # Up
bindkey "^[OB" down-line-or-beginning-search # Up

# Set preexec hook to mark command start and output with OSC 133 sequences
preexec() {
  # Mark command start with the actual command
  print -Pn "\e]133;C;$(echo $1 | base64)\a"
  # Mark beginning of command output
  print -Pn "\e]133;A\a"
}

# Automatically source all files/links in the directory config_dir
# If the auto-source folder exists and has files in it...
config_dir="$HOME/.shellrc.d"

if [[ -d $config_dir ]]; then

  # If the directory is not empty...
  if [[ "$(\ls -A $config_dir)" ]]; then

    # Loop through files (in alphabetical order) and source them.
    # To specify a load order, files can be prefixed with numbers
    # (e.g. 00--filename, 50--filename, 95--filename)
    for file in $config_dir/*; do
        source "${file}"
    done
  fi
fi

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# Zinit plugins
zinit ice blockf atpull'zinit creinstall -q .'
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
# zinit light Aloxaf/fzf-tab

# Load completions
# zstyle :compinstall filename '$HOME/.zshrc'
autoload -Uz compinit && compinit

bindkey '^y' autosuggest-accept

zinit cdreplay -q

# Completions styling
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# We don't want to use the default bling.sh script, we already have everything we need from that elsewhere.
export BLING_SOURCED=1

# zprof
