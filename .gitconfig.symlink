# vim: set filetype=gitconfig:

[user]
    name = Hugues Demers
    email = hdemers@gmail.com


[color]
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
;[color "diff"]
    ;meta = yellow bold
    ;frag = magenta bold
    ;old = red bold
    ;new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan


[alias]
    st = status
    ci = commit
    br = branch
    co = checkout
    sw = switch
    df = diff
    dc = diff --cached
    dm = diff master --stat
    dmm = diff master... --stat
    lg = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(bold blue)[%an]%Creset%n' --abbrev-commit --date=relative --stat
    hist = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date=relative
    all = log --branches --remotes --tags --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date=relative HEAD
    rb = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads \
          --format='%(refname:short)|\
%(HEAD)%(color:yellow)%(refname:short)|\
%(color:green)%(committerdate:relative)|\
%(color:blue)%(subject)|\
%(color:magenta)%(authorname)%(color:reset)' \
            --color=always \
            --count=${count:-20} \
            | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); \
            ahead=$(git rev-list --count \"${refbranch:-origin/master}..${branch}\"); \
            behind=$(git rev-list --count \"${branch}..${refbranch:-origin/master}\"); \
            colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); \
            echo \"$colorline|$ahead|$behind\" | awk -F'|' -vOFS='|' '{$3=substr($3,1,70)}1' ; done \
            | ( echo \"branch|lastcommit|message|author|ahead|behind\" && cat) | column -ts'|';}; r"
    rba = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads refs/remotes \
        --format='%(refname:short)|\
%(HEAD)%(color:yellow)%(refname:short)|\
%(color:green)%(committerdate:relative)|\
%(color:blue)%(subject)|\
%(color:magenta)%(authorname)%(color:reset)' \
        --color=always \
        --count=${count:-20} \
        | grep -v 'refs/remotes/origin/HEAD' \
        | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); \
        branch=${branch#refs/remotes/}; \
        ahead=$(git rev-list --count \"${refbranch:-origin/master}..${branch}\"); \
        behind=$(git rev-list --count \"${branch}..${refbranch:-origin/master}\"); \
        colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); \
        echo \"$colorline|$ahead|$behind\" | awk -F'|' -vOFS='|' '{$3=substr($3,1,70)}1' ; done \
        | ( echo \"branch|lastcommit|message|author|ahead|behind\\n\" && cat) | column -ts'|';}; r"
    ls = ls-files
    lsp = diff --stat
    lcp = log master..HEAD
    prm = log master..HEAD --pretty=format:'"####" %s (%h)%n%b' --reverse
    uncommit = reset --soft HEAD~1
    unmerge = reset --merge ORIG_HEAD

[core]
    excludesfile = /home/hdemers/.gitignore
    ;autocrlf = true

[branch]
    autosetupmerge = true

[push]
	default = current
[github]
    user = hdemers
[gist]
    private = yes

[init]
	defaultBranch = main

[credential]
	helper = cache

[interactive]
    diffFilter = difft

[merge]
    conflictstyle = diff3

[difftool]
    prompt = false

[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"

[pager]
    difftool = true
[rebase]
	autosquash = true
